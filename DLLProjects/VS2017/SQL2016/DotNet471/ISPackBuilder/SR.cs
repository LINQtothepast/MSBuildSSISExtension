// WARNING:
// This file was generated by the Microsoft DataWarehouse String Resource Tool 1.33.0.0
// from information in SR.strings.
// DO NOT MODIFY THIS FILE'S CONTENTS, THEY WILL BE OVERWRITTEN
// 
namespace Microsoft.SqlServer.IntegrationServices.Build
{
	using System;
	using System.Resources;
	using System.Globalization;
	
	
	[System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	internal class SR
	{
		
		protected SR()
		{
		}
		
		public static CultureInfo Culture
		{
			get
			{
				return Keys.Culture;
			}
			set
			{
				Keys.Culture = value;
			}
		}
		
		public static string ProjectPasswordMissing
		{
			get
			{
				return Keys.GetString(Keys.ProjectPasswordMissing);
			}
		}
		
		public static string VersionComments
		{
			get
			{
				return Keys.GetString(Keys.VersionComments);
			}
		}
		
		public static string ConnectionError
		{
			get
			{
				return Keys.GetString(Keys.ConnectionError);
			}
		}
		
		public static string DeploymentFailed
		{
			get
			{
				return Keys.GetString(Keys.DeploymentFailed);
			}
		}
		
		public static string OutputDirectory(string dir)
		{
			return Keys.GetString(Keys.OutputDirectory, dir);
		}
		
		public static string ProjectLevel(object level)
		{
			return Keys.GetString(Keys.ProjectLevel, level);
		}
		
		public static string AddProjectParameter(string name)
		{
			return Keys.GetString(Keys.AddProjectParameter, name);
		}
		
		public static string LoadingConnectionManager(string name)
		{
			return Keys.GetString(Keys.LoadingConnectionManager, name);
		}
		
		public static string PackageProtectionLevel(object level)
		{
			return Keys.GetString(Keys.PackageProtectionLevel, level);
		}
		
		public static string ProjectVersionChange(object version)
		{
			return Keys.GetString(Keys.ProjectVersionChange, version);
		}
		
		public static string SavingProject(string path)
		{
			return Keys.GetString(Keys.SavingProject, path);
		}
		
		public static string ConfigSetting(string param)
		{
			return Keys.GetString(Keys.ConfigSetting, param);
		}
		
		public static string LoadingPackage(string path)
		{
			return Keys.GetString(Keys.LoadingPackage, path);
		}
		
		public static string ErrorLoadingPackage(string package, string msg)
		{
			return Keys.GetString(Keys.ErrorLoadingPackage, package, msg);
		}
		
		public static string LoadingProject(string path)
		{
			return Keys.GetString(Keys.LoadingProject, path);
		}
		
		public static string ConnectingToServer(string cs)
		{
			return Keys.GetString(Keys.ConnectingToServer, cs);
		}
		
		public static string DeployingProject(string path)
		{
			return Keys.GetString(Keys.DeployingProject, path);
		}
		
		public static string CreatingFolder(string folder)
		{
			return Keys.GetString(Keys.CreatingFolder, folder);
		}
		
		[System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
		public class Keys
		{
			
			static ResourceManager resourceManager = new ResourceManager(typeof(SR).FullName, typeof(SR).Module.Assembly);
			
			static CultureInfo _culture = null;
			
			public const string OutputDirectory = "OutputDirectory";
			
			public const string ProjectLevel = "ProjectLevel";
			
			public const string ProjectPasswordMissing = "ProjectPasswordMissing";
			
			public const string AddProjectParameter = "AddProjectParameter";
			
			public const string LoadingConnectionManager = "LoadingConnectionManager";
			
			public const string PackageProtectionLevel = "PackageProtectionLevel";
			
			public const string ProjectVersionChange = "ProjectVersionChange";
			
			public const string VersionComments = "VersionComments";
			
			public const string SavingProject = "SavingProject";
			
			public const string ConfigSetting = "ConfigSetting";
			
			public const string LoadingPackage = "LoadingPackage";
			
			public const string ErrorLoadingPackage = "ErrorLoadingPackage";
			
			public const string LoadingProject = "LoadingProject";
			
			public const string ConnectingToServer = "ConnectingToServer";
			
			public const string ConnectionError = "ConnectionError";
			
			public const string DeployingProject = "DeployingProject";
			
			public const string DeploymentFailed = "DeploymentFailed";
			
			public const string CreatingFolder = "CreatingFolder";
			
			private Keys()
			{
			}
			
			public static CultureInfo Culture
			{
				get
				{
					return _culture;
				}
				set
				{
					_culture = value;
				}
			}
			
			public static string GetString(string key)
			{
				return resourceManager.GetString(key, _culture);
			}
			
			public static string GetString(string key, object arg0)
			{
				return string.Format(global::System.Globalization.CultureInfo.CurrentCulture, resourceManager.GetString(key, _culture), arg0);
			}
			
			public static string GetString(string key, object arg0, object arg1)
			{
				return string.Format(global::System.Globalization.CultureInfo.CurrentCulture, resourceManager.GetString(key, _culture), arg0, arg1);
			}
		}
	}
}
